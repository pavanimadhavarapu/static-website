pipeline {
    agent any

    environment {
        REGISTRY = "docker.io"
        DOCKERHUB_NAMESPACE = "pavanimadhavarapu"
        IMAGE_NAME = "${DOCKERHUB_NAMESPACE}/static-website"
        IMAGE_TAG = "${BUILD_NUMBER}"
        DOCKERHUB_CRED = "dockerhub-cred"
        HOST_PORT = "8085"          // external port (change as you need)
        CONTAINER_PORT = "80"       // container's internal port
        CONTAINER_NAME = "staticwebsite"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/pavanimadhavarapu/static-website.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${IMAGE_NAME}:${IMAGE_TAG} ."
                sh "docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${IMAGE_NAME}:latest"
            }
        }

        stage('Push to DockerHub') {
            steps {
                withCredentials([usernamePassword(credentialsId: "${DOCKERHUB_CRED}", usernameVariable: "DOCKER_USER", passwordVariable: "DOCKER_PASS")]) {
                    sh '''
                      echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                      docker push ${IMAGE_NAME}:${IMAGE_TAG}
                      docker push ${IMAGE_NAME}:latest
                    '''
                }
            }
        }

        stage('Deploy Container') {
            steps {
                sh '''
                  # Stop & remove old container if running
                  docker rm -f ${CONTAINER_NAME} || true

                  # Run new container
                  docker run -d --name ${CONTAINER_NAME} -p ${HOST_PORT}:${CONTAINER_PORT} ${IMAGE_NAME}:${IMAGE_TAG}
                '''
            }
        }
    }
}

